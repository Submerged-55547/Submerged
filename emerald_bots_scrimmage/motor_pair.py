def move(pair: int, steering: int, *, velocity: int = 360, acceleration: int = 1000) -> None:
    ...
def move_for_degrees(pair: int, degrees: int, steering: int, *, velocity: int = 360, stop: int = motor.BRAKE, acceleration: int = 1000, deceleration: int = 1000) -> Awaitable:
    ...
def move_for_time(pair: int, duration: int, steering: int, *, velocity: int = 360, stop: int = motor.BRAKE, acceleration: int = 1000, deceleration: int = 1000) -> Awaitable:
    ...
def move_tank(pair: int, left_velocity: int, right_velocity: int, *, acceleration: int = 1000) -> None:
    ...
def move_tank_for_degrees(pair: int, degrees: int, left_velocity: int, right_velocity: int, *, stop: int = motor.BRAKE, acceleration: int = 1000, deceleration: int = 1000) -> Awaitable:
    ...
def move_tank_for_time(pair: int, left_velocity: int, right_velocity: int, duration: int, *, stop: int = motor.BRAKE, acceleration: int = 1000, deceleration: int = 1000) -> Awaitable:
    ...
def pair(pair: int, left_motor: int, right_motor: int) -> None:
    ...
def stop(pair: int, *, stop: int = motor.BRAKE) -> None:
    ...
def unpair(pair: int) -> None:
    ...
PAIR_1 = 0
PAIR_2 = 1
PAIR_3 = 2
